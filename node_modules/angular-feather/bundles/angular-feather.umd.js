(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('angular-feather', ['exports', '@angular/core'], factory) :
    (factory((global['angular-feather'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Icons = /** @class */ (function () {
        function Icons(icons) {
            this.icons = icons;
        }
        return Icons;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @param {?} str
     * @return {?}
     */
    function uppercamelcase(str) {
        return str.toLowerCase().replace(/(?:^\w|[A-Z]|\b\w)/g, ( /**
         * @param {?} firstLetter
         * @return {?}
         */function (firstLetter) {
            return firstLetter.toUpperCase();
        })).replace(/[-_]/g, '');
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FeatherComponent = /** @class */ (function () {
        function FeatherComponent(elem, changeDetector, icons) {
            this.elem = elem;
            this.changeDetector = changeDetector;
            this.icons = icons;
        }
        /**
         * @param {?} changes
         * @return {?}
         */
        FeatherComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                // icons are provided as an array of objects because of "multi: true"
                /** @type {?} */
                var icons = Object.assign.apply(Object, __spread([{}], (( /** @type {?} */(( /** @type {?} */(this.icons)))))));
                /** @type {?} */
                var svg = icons[uppercamelcase(changes.name.currentValue)] || '';
                if (!svg) {
                    console.warn("Icon not found: " + changes.name.currentValue + "\n" +
                        "Refer to documentation on https://github.com/michaelbazos/angular-feather");
                }
                this.elem.nativeElement.innerHTML = svg;
                this.changeDetector.markForCheck();
            };
        FeatherComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'i-feather, feather-icon',
                        template: "<ng-content></ng-content>\n",
                        styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}"]
                    }] }
        ];
        /** @nocollapse */
        FeatherComponent.ctorParameters = function () {
            return [
                { type: core.ElementRef },
                { type: core.ChangeDetectorRef },
                { type: Icons, decorators: [{ type: core.Inject, args: [Icons,] }] }
            ];
        };
        FeatherComponent.propDecorators = {
            name: [{ type: core.Input }]
        };
        return FeatherComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FeatherModule = /** @class */ (function () {
        function FeatherModule(icons) {
            this.icons = icons;
            if (!this.icons) {
                throw new Error("No icon provided. Make sure to use 'FeatherModule.pick({ ... })' when importing the module\n" +
                    "Refer to documentation on https://github.com/michaelbazos/angular-feather");
            }
        }
        /**
         * @param {?} icons
         * @return {?}
         */
        FeatherModule.pick = /**
         * @param {?} icons
         * @return {?}
         */
            function (icons) {
                return {
                    ngModule: FeatherModule,
                    providers: [
                        { provide: Icons, multi: true, useValue: icons }
                    ]
                };
            };
        FeatherModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            FeatherComponent
                        ],
                        exports: [
                            FeatherComponent
                        ]
                    },] }
        ];
        /** @nocollapse */
        FeatherModule.ctorParameters = function () {
            return [
                { type: Icons, decorators: [{ type: core.Optional }] }
            ];
        };
        return FeatherModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.FeatherModule = FeatherModule;
    exports.ɵa = FeatherComponent;
    exports.ɵb = Icons;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=angular-feather.umd.js.map