import { __spread } from 'tslib';
import { Component, ElementRef, Input, Inject, ChangeDetectorRef, NgModule, Optional } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Icons = /** @class */ (function () {
    function Icons(icons) {
        this.icons = icons;
    }
    return Icons;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} str
 * @return {?}
 */
function uppercamelcase(str) {
    return str.toLowerCase().replace(/(?:^\w|[A-Z]|\b\w)/g, (/**
     * @param {?} firstLetter
     * @return {?}
     */
    function (firstLetter) {
        return firstLetter.toUpperCase();
    })).replace(/[-_]/g, '');
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FeatherComponent = /** @class */ (function () {
    function FeatherComponent(elem, changeDetector, icons) {
        this.elem = elem;
        this.changeDetector = changeDetector;
        this.icons = icons;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    FeatherComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        // icons are provided as an array of objects because of "multi: true"
        /** @type {?} */
        var icons = Object.assign.apply(Object, __spread([{}], ((/** @type {?} */ ((/** @type {?} */ (this.icons)))))));
        /** @type {?} */
        var svg = icons[uppercamelcase(changes.name.currentValue)] || '';
        if (!svg) {
            console.warn("Icon not found: " + changes.name.currentValue + "\n" +
                "Refer to documentation on https://github.com/michaelbazos/angular-feather");
        }
        this.elem.nativeElement.innerHTML = svg;
        this.changeDetector.markForCheck();
    };
    FeatherComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'i-feather, feather-icon',
                    template: "<ng-content></ng-content>\n",
                    styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}"]
                }] }
    ];
    /** @nocollapse */
    FeatherComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: Icons, decorators: [{ type: Inject, args: [Icons,] }] }
    ]; };
    FeatherComponent.propDecorators = {
        name: [{ type: Input }]
    };
    return FeatherComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var FeatherModule = /** @class */ (function () {
    function FeatherModule(icons) {
        this.icons = icons;
        if (!this.icons) {
            throw new Error("No icon provided. Make sure to use 'FeatherModule.pick({ ... })' when importing the module\n" +
                "Refer to documentation on https://github.com/michaelbazos/angular-feather");
        }
    }
    /**
     * @param {?} icons
     * @return {?}
     */
    FeatherModule.pick = /**
     * @param {?} icons
     * @return {?}
     */
    function (icons) {
        return {
            ngModule: FeatherModule,
            providers: [
                { provide: Icons, multi: true, useValue: icons }
            ]
        };
    };
    FeatherModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        FeatherComponent
                    ],
                    exports: [
                        FeatherComponent
                    ]
                },] }
    ];
    /** @nocollapse */
    FeatherModule.ctorParameters = function () { return [
        { type: Icons, decorators: [{ type: Optional }] }
    ]; };
    return FeatherModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { FeatherModule, FeatherComponent as ɵa, Icons as ɵb };

//# sourceMappingURL=angular-feather.js.map