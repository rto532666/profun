{"version":3,"sources":["ng://ngx-slick-carousel/slick.component.ts","ng://ngx-slick-carousel/index.ts"],"names":["SlickCarouselComponent","el","zone","this","afterChange","EventEmitter","beforeChange","breakpoint","destroy","init","slides","initialized","_removedSlides","_addedSlides","prototype","ngOnDestroy","unslick","ngAfterViewInit","ngAfterViewChecked","_this","length","nextSlidesLength","forEach","slickItem","push","runOutsideAngular","$instance","slick","nativeElement","idx","indexOf","filter","s","initSlick","jQuery","on","event","run","emit","config","currentIndex","initialSlide","currentSlide","nextSlide","addSlide","removeSlide","slickGoTo","index","slickNext","slickPrev","slickPause","slickPlay","undefined","ngOnChanges","changes","previousValue","currentValue","refresh_1","newOptions_1","Object","assign","Component","args","selector","exportAs","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","template","ElementRef","NgZone","Input","Output","SlickItemDirective","platformId","carousel","ngOnInit","isPlatformBrowser","Directive","Inject","PLATFORM_ID","decorators","type","Host","SlickCarouselModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {isPlatformBrowser} from '@angular/common';\nimport {\n    AfterViewChecked,\n    AfterViewInit,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Host,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    PLATFORM_ID,\n    SimpleChanges\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n    selector: 'ngx-slick-carousel',\n    exportAs: 'slick-carousel',\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SlickCarouselComponent),\n        multi: true\n    }],\n    template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\n\n    @Input() config: any;\n    @Output() afterChange: EventEmitter<any> = new EventEmitter();\n    @Output() beforeChange: EventEmitter<any> = new EventEmitter();\n    @Output() breakpoint: EventEmitter<any> = new EventEmitter();\n    @Output() destroy: EventEmitter<any> = new EventEmitter();\n    @Output() init: EventEmitter<any> = new EventEmitter();\n\n    public $instance: any;\n    public currentIndex: number;\n    public slides: any[] = [];\n    public initialized = false;\n    private _removedSlides: SlickItemDirective[] = [];\n    private _addedSlides: SlickItemDirective[] = [];\n\n    /**\n     * Constructor\n     */\n    constructor(private el: ElementRef,\n                private zone: NgZone) {\n\n    }\n\n    /**\n     * On component destroy\n     */\n    ngOnDestroy() {\n        this.unslick();\n    }\n\n    ngAfterViewInit(): void {\n        this.ngAfterViewChecked();\n    }\n\n    /**\n     * On component view checked\n     */\n    ngAfterViewChecked() {\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            } else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            } else {\n                this._addedSlides.forEach(slickItem => {\n                    this.slides.push(slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    });\n                });\n                this._addedSlides = [];\n\n                this._removedSlides.forEach(slickItem => {\n                    const idx = this.slides.indexOf(slickItem);\n                    this.slides = this.slides.filter(s => s !== slickItem);\n                    this.zone.runOutsideAngular(() => {\n                        this.$instance.slick('slickRemove', idx);\n                    });\n                });\n                this._removedSlides = [];\n            }\n        }\n    }\n\n    /**\n     * init slick\n     */\n    initSlick() {\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular(() => {\n            this.$instance = jQuery(this.el.nativeElement);\n\n            this.$instance.on('init', (event, slick) => {\n                this.zone.run(() => {\n                    this.init.emit({event, slick});\n                });\n            });\n\n            this.$instance.slick(this.config);\n\n            this.zone.run(() => {\n                this.initialized = true;\n\n                this.currentIndex = (this.config && this.config.initialSlide) ? this.config.initialSlide : 0;\n            });\n\n            this.$instance.on('afterChange', (event, slick, currentSlide) => {\n                this.zone.run(() => {\n                    this.afterChange.emit({event, slick, currentSlide});\n                    this.currentIndex = currentSlide;\n                });\n            });\n\n            this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n                this.zone.run(() => {\n                    this.beforeChange.emit({event, slick, currentSlide, nextSlide});\n                    this.currentIndex = nextSlide;\n                });\n            });\n\n            this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n                this.zone.run(() => {\n                    this.breakpoint.emit({event, slick, breakpoint});\n                });\n            });\n\n            this.$instance.on('destroy', (event, slick) => {\n                this.zone.run(() => {\n                    this.destroy.emit({event, slick});\n                    this.initialized = false;\n                });\n            });\n        });\n    }\n\n    addSlide(slickItem: SlickItemDirective) {\n        this._addedSlides.push(slickItem);\n    }\n\n    removeSlide(slickItem: SlickItemDirective) {\n        this._removedSlides.push(slickItem);\n    }\n\n    /**\n     * Slick Method\n     */\n    public slickGoTo(index: number) {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickGoTo', index);\n        });\n    }\n\n    public slickNext() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickNext');\n        });\n    }\n\n    public slickPrev() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPrev');\n        });\n    }\n\n    public slickPause() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPause');\n        });\n    }\n\n    public slickPlay() {\n        this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickPlay');\n        });\n    }\n\n    public unslick() {\n        if (this.$instance) {\n            this.zone.runOutsideAngular(() => {\n                this.$instance.slick('unslick');\n            });\n            this.$instance = undefined;\n        }\n        this.initialized = false;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.initialized) {\n            const config = changes['config'];\n            if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n                const refresh = config.currentValue['refresh'];\n                const newOptions = Object.assign({}, config.currentValue);\n                delete newOptions['refresh'];\n\n                this.zone.runOutsideAngular(() => {\n                    this.$instance.slick('slickSetOption', newOptions, refresh);\n                });\n            }\n        }\n    }\n\n}\n\n@Directive({\n    selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n    constructor(public el: ElementRef,\n                @Inject(PLATFORM_ID) private platformId: string,\n                @Host() private carousel: SlickCarouselComponent) {\n    }\n\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.addSlide(this);\n        }\n    }\n\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.removeSlide(this);\n        }\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n"]}